{"ast":null,"code":"var _jsxFileName = \"D:\\\\Digital-replica\\\\frontend\\\\src\\\\Components\\\\Chatbot\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const location = useLocation();\n  const {\n    replicaName,\n    replicaDescription,\n    replicaPersona\n  } = location.state; // Extract both replicaName and replicaDescription from state\n  console.log(replicaName, replicaDescription);\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.id = \"chatbot-main-script\";\n    script.src = \"https://chatbot-embed.viasocket.com/chatbot-prod.js\";\n    script.async = true;\n    script.setAttribute(\"embedToken\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdfaWQiOiIxMjA2OSIsImNoYXRib3RfaWQiOiI2Nzc2MjQ1MzVlMTBlMTY2MzdlMzVlY2EiLCJ1c2VyX2lkIjoiaGdqZ2poIn0.g_leEwfTrGZHAmQxkU-gpjvDY5Fwmds3tMfK0B-DpT8\");\n    script.setAttribute(\"hideIcon\", true);\n    document.head.appendChild(script);\n    script.onload = () => {\n      if (window.SendDataToChatbot) {\n        window.SendDataToChatbot({\n          bridgeName: \"Assistant\",\n          threadId: replicaName,\n          // Pass replicaName as threadId\n          hideIcon: false,\n          variables: {\n            name: replicaName,\n            description: replicaDescription,\n            persona: replicaPersona\n          }\n        });\n      }\n    };\n    return () => {\n      document.head.removeChild(script);\n    };\n  }, [replicaName, replicaDescription, replicaPersona]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chatbot-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n_s(Chatbot, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useLocation","jsxDEV","_jsxDEV","Chatbot","_s","location","replicaName","replicaDescription","replicaPersona","state","console","log","script","document","createElement","id","src","async","setAttribute","head","appendChild","onload","window","SendDataToChatbot","bridgeName","threadId","hideIcon","variables","name","description","persona","removeChild","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Digital-replica/frontend/src/Components/Chatbot/Chatbot.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Chatbot = () => {\r\n  const location = useLocation();\r\n  const { replicaName, replicaDescription, replicaPersona } = location.state; // Extract both replicaName and replicaDescription from state\r\n  console.log(replicaName, replicaDescription);\r\n\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.id = \"chatbot-main-script\";\r\n    script.src = \"https://chatbot-embed.viasocket.com/chatbot-prod.js\";\r\n    script.async = true;\r\n    script.setAttribute(\r\n      \"embedToken\",\r\n      \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJvcmdfaWQiOiIxMjA2OSIsImNoYXRib3RfaWQiOiI2Nzc2MjQ1MzVlMTBlMTY2MzdlMzVlY2EiLCJ1c2VyX2lkIjoiaGdqZ2poIn0.g_leEwfTrGZHAmQxkU-gpjvDY5Fwmds3tMfK0B-DpT8\"\r\n    );\r\n    script.setAttribute(\"hideIcon\", true);\r\n    document.head.appendChild(script);\r\n\r\n    script.onload = () => {\r\n      if (window.SendDataToChatbot) {\r\n        window.SendDataToChatbot({\r\n          bridgeName: \"Assistant\",\r\n          threadId: replicaName, // Pass replicaName as threadId\r\n          hideIcon: false,\r\n          variables: {\r\n            name: replicaName,\r\n            description: replicaDescription,\r\n            persona: replicaPersona,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      document.head.removeChild(script);\r\n    };\r\n  }, [replicaName, replicaDescription, replicaPersona]);\r\n\r\n  return <div id=\"chatbot-container\"></div>;\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,WAAW;IAAEC,kBAAkB;IAAEC;EAAe,CAAC,GAAGH,QAAQ,CAACI,KAAK,CAAC,CAAC;EAC5EC,OAAO,CAACC,GAAG,CAACL,WAAW,EAAEC,kBAAkB,CAAC;EAE5CR,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,EAAE,GAAG,qBAAqB;IACjCH,MAAM,CAACI,GAAG,GAAG,qDAAqD;IAClEJ,MAAM,CAACK,KAAK,GAAG,IAAI;IACnBL,MAAM,CAACM,YAAY,CACjB,YAAY,EACZ,0LACF,CAAC;IACDN,MAAM,CAACM,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;IACrCL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC;IAEjCA,MAAM,CAACS,MAAM,GAAG,MAAM;MACpB,IAAIC,MAAM,CAACC,iBAAiB,EAAE;QAC5BD,MAAM,CAACC,iBAAiB,CAAC;UACvBC,UAAU,EAAE,WAAW;UACvBC,QAAQ,EAAEnB,WAAW;UAAE;UACvBoB,QAAQ,EAAE,KAAK;UACfC,SAAS,EAAE;YACTC,IAAI,EAAEtB,WAAW;YACjBuB,WAAW,EAAEtB,kBAAkB;YAC/BuB,OAAO,EAAEtB;UACX;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IAED,OAAO,MAAM;MACXK,QAAQ,CAACM,IAAI,CAACY,WAAW,CAACnB,MAAM,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,CAACN,WAAW,EAAEC,kBAAkB,EAAEC,cAAc,CAAC,CAAC;EAErD,oBAAON,OAAA;IAAKa,EAAE,EAAC;EAAmB;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC3C,CAAC;AAAC/B,EAAA,CAtCID,OAAO;EAAA,QACMH,WAAW;AAAA;AAAAoC,EAAA,GADxBjC,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}