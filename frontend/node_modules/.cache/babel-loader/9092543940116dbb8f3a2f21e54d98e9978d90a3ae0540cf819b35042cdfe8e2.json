{"ast":null,"code":"var _jsxFileName = \"D:\\\\Digital-replica\\\\frontend\\\\src\\\\Components\\\\Auth\\\\Auth.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { auth } from \"../../firebase.js\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isSignup, setIsSignup] = useState(true);\n  const [showPopup, setShowPopup] = useState(false); // State for showing the popup\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State for error message\n  const navigate = useNavigate(); // Initialize navigate\n\n  const googleProvider = new GoogleAuthProvider(); // Initialize Google Auth Provider\n\n  // Google Sign-In Handler\n  const handleGoogleSignIn = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n      console.log(\"Google Sign-in successful:\", user);\n      localStorage.setItem(\"token\", user.accessToken); // Store the token in localStorage\n      navigate(\"/createReplica\"); // Redirect to the home page after successful login\n    } catch (error) {\n      console.error(\"Error during Google sign-in:\", error.message);\n      setErrorMessage(\"An error occurred during Google sign-in.\");\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErrorMessage(\"\"); // Clear any previous error message\n\n    try {\n      if (isSignup) {\n        // Signup logic\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        console.log(\"Signed up successfully:\", userCredential.user);\n        setShowPopup(true); // Show the success popup on account creation\n        localStorage.setItem(\"token\", userCredential.user.accessToken); // Store the token in localStorage\n        navigate(\"/\"); // Redirect to the home page after successful signup\n      } else {\n        // Login logic\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        console.log(\"Logged in successfully:\", userCredential.user);\n        localStorage.setItem(\"token\", userCredential.user.accessToken); // Store the token in localStorage\n        navigate(\"/createReplica\"); // Redirect to the home page after successful login\n      }\n    } catch (error) {\n      console.error(\"Error:\", error.message);\n      if (error.code === \"auth/invalid-email\") {\n        setErrorMessage(\"Invalid email address.\");\n      } else if (error.code === \"auth/user-not-found\") {\n        setErrorMessage(\"No account found with this email.\");\n      } else if (error.code === \"auth/wrong-password\") {\n        setErrorMessage(\"Incorrect password.\");\n      } else {\n        setErrorMessage(\"An error occurred. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isSignup ? \"Create Account\" : \"Welcome Back!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        className: \"auth-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"auth-button\",\n        children: isSignup ? \"Sign Up\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"toggle-auth\",\n      children: [isSignup ? \"Already have an account?\" : \"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setIsSignup(!isSignup),\n        className: \"toggle-link\",\n        children: isSignup ? \"Login\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      className: \"google-signin-button\",\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Account created successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPopup(false),\n        className: \"popup-close\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"In4xdeN2GOAReXtObCs8ULbGMmA=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","useNavigate","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","password","setPassword","isSignup","setIsSignup","showPopup","setShowPopup","errorMessage","setErrorMessage","navigate","googleProvider","handleGoogleSignIn","result","user","console","log","localStorage","setItem","accessToken","error","message","handleSubmit","e","preventDefault","userCredential","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["D:/Digital-replica/frontend/src/Components/Auth/Auth.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { auth } from \"../../firebase.js\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n} from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isSignup, setIsSignup] = useState(true);\r\n  const [showPopup, setShowPopup] = useState(false); // State for showing the popup\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State for error message\r\n  const navigate = useNavigate(); // Initialize navigate\r\n\r\n  const googleProvider = new GoogleAuthProvider(); // Initialize Google Auth Provider\r\n\r\n  // Google Sign-In Handler\r\n  const handleGoogleSignIn = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, googleProvider);\r\n      const user = result.user;\r\n      console.log(\"Google Sign-in successful:\", user);\r\n      localStorage.setItem(\"token\", user.accessToken); // Store the token in localStorage\r\n      navigate(\"/createReplica\"); // Redirect to the home page after successful login\r\n    } catch (error) {\r\n      console.error(\"Error during Google sign-in:\", error.message);\r\n      setErrorMessage(\"An error occurred during Google sign-in.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage(\"\"); // Clear any previous error message\r\n\r\n    try {\r\n      if (isSignup) {\r\n        // Signup logic\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          email,\r\n          password\r\n        );\r\n        console.log(\"Signed up successfully:\", userCredential.user);\r\n        setShowPopup(true); // Show the success popup on account creation\r\n        localStorage.setItem(\"token\", userCredential.user.accessToken); // Store the token in localStorage\r\n        navigate(\"/\"); // Redirect to the home page after successful signup\r\n      } else {\r\n        // Login logic\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          email,\r\n          password\r\n        );\r\n        console.log(\"Logged in successfully:\", userCredential.user);\r\n        localStorage.setItem(\"token\", userCredential.user.accessToken); // Store the token in localStorage\r\n        navigate(\"/createReplica\"); // Redirect to the home page after successful login\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error.message);\r\n      if (error.code === \"auth/invalid-email\") {\r\n        setErrorMessage(\"Invalid email address.\");\r\n      } else if (error.code === \"auth/user-not-found\") {\r\n        setErrorMessage(\"No account found with this email.\");\r\n      } else if (error.code === \"auth/wrong-password\") {\r\n        setErrorMessage(\"Incorrect password.\");\r\n      } else {\r\n        setErrorMessage(\"An error occurred. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <h2>{isSignup ? \"Create Account\" : \"Welcome Back!\"}</h2>\r\n      <form onSubmit={handleSubmit} className=\"auth-form\">\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          className=\"auth-input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          className=\"auth-input\"\r\n        />\r\n        <button type=\"submit\" className=\"auth-button\">\r\n          {isSignup ? \"Sign Up\" : \"Login\"}\r\n        </button>\r\n      </form>\r\n      <p className=\"toggle-auth\">\r\n        {isSignup ? \"Already have an account?\" : \"Don't have an account?\"}{\" \"}\r\n        <span onClick={() => setIsSignup(!isSignup)} className=\"toggle-link\">\r\n          {isSignup ? \"Login\" : \"Sign Up\"}\r\n        </span>\r\n      </p>\r\n\r\n      {/* Google Sign-In Button */}\r\n      <button onClick={handleGoogleSignIn} className=\"google-signin-button\">\r\n        Sign in with Google\r\n      </button>\r\n\r\n      {/* Popup for successful account creation */}\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          <p>Account created successfully!</p>\r\n          <button onClick={() => setShowPopup(false)} className=\"popup-close\">\r\n            Close\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Error message for incorrect credentials */}\r\n      {errorMessage && (\r\n        <div className=\"error-message\">\r\n          <p>{errorMessage}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}